>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 1)
2

>>> add_integer(2, -1)
1

>>> add_integer(-1, -1)
-2

>>> add_integer(2, -1.1)
1

>>> add_integer(-1.1, 2)
1

>>> add_integer(3.14, 8)
11

>>> add_integer(-2.2, -2.2)
-4

>>> add_integer(2)
100

>>> add_integer(1.1, 1)
2

>>> add_integer(0)
98

>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 13, in add_integer
    raise TypeError('a must be an integer')
TypeError: a must be an integer

>>> add_integer(1, "test")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 13, in add_integer
    raise TypeError('b must be an integer')
TypeError: b must be an integer

>>> add_integer("test1", 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 13, in add_integer
    raise TypeError('a must be an integer')
TypeError: a must be an integer
